stages:
  - build
  - test
  - production

build frontend-web:
  image: node:latest
  stage: build
  only:
    changes:
      - frontend-web/**/*
  script:
    - cd frontend-web
    - npm i
    
test backend:
  image: python:3.6
  stage: test
  before_script:
    - pip3 install django graphene-django django-cors-headers django-channels django-graphql-jwt mysqlclient mapbox coverage
  script:
    - cd backend
    - python3 manage.py test
    - coverage run manage.py test
    - coverage html
    - "coverage report | grep 'TOTAL' | awk '{print substr($NF, 0, 2), \"% coverage\"}'"
  coverage: /\d+.\d+ \% covered/
  artifacts:
    paths:
      - backend/htmlcov

deploy frontend-web:
  image: node:latest
  stage: production
  only:
    refs:
      - master
    changes:
      - frontend-web/**/*
  before_script:
    - apt-get update -qq && apt-get install -y -qq sshpass
  script:
    - sshpass -V
    - export SSHPASS=$USER_PASS
    - sshpass -e scp -o stricthostkeychecking=no -r frontend-web tudectree@172.104.250.55:/home/tudectree/stm
    - sshpass -e ssh -o StrictHostKeyChecking=no tudectree@172.104.250.55 bash /home/tudectree/stm/start_frontend.sh

deploy backend:
  image: python:3.6
  stage: production
  only:
    refs:
      - master
    changes:
      - backend/**/*
  before_script:
    - apt-get update -qq && apt-get install -y -qq sshpass
  script:
    - sshpass -V
    - export SSHPASS=$USER_PASS
    - sshpass -e scp -o stricthostkeychecking=no -r backend tudectree@172.104.250.55:/home/tudectree/stm
    - sshpass -e ssh -o StrictHostKeyChecking=no tudectree@172.104.250.55 bash /home/tudectree/stm/start_backend.sh